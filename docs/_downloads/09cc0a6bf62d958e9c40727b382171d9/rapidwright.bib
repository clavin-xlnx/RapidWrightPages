@INPROCEEDINGS{RapidWright,

  author={C. {Lavin} and A. {Kaviani}},
  booktitle={2018 IEEE 26th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)}, 
 title={RapidWright: Enabling Custom Crafted Implementations for FPGAs}, 
  year={2018},
  volume={},
  number={},
  pages={133-140},
  abstract={FPGA application size is rapidly growing by reuse and replication. Achieved quality of results (QoR) of these large designs is often much lower than what could be realized with localized circuits at a modular level. One underlying reason for QoR loss is that back-end implementation tools compile the designs as one large circuit entry. Is there a way to bring innovation to the implementation stage of FPGA compilation that can improve QoR? This work proposes a pre-implemented methodology for FPGAs to achieve higher performance or productivity and introduces RapidWright, an open-source platform to enable this new approach. We aim to enhance either QoR or productivity through the reuse of modular implementations and present examples that improve QoR up to 50% or accelerate compilation time and debug by more than an order of magnitude. Finally, we demonstrate how RapidWright enables custom crafted implementations with near spec performance.},
  keywords={field programmable gate arrays;productivity;program compilers;program debugging;public domain software;pre-implemented methodology;RapidWright;open-source platform;modular implementations;debug;FPGA application size;replication;localized circuits;modular level;QoR loss;circuit entry;FPGA compilation;custom crafted implementations;productivity;quality of results;back-end implementation tools;Tools;Field programmable gate arrays;Routing;Performance evaluation;Productivity;Load modeling;Micromechanical devices;FPGA;Xilinx;Pre-implemented;QoR;Debug;Clocking;Overlays;Shells},
  doi={10.1109/FCCM.2018.00030},
  ISSN={2576-2621},
  month={April},}